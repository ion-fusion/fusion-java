// Copyright (c) 2012-2016 Amazon.com, Inc.  All rights reserved.

(module fusion "/fusion/base"

  // WARNING: Doc syntax isn't supported yet.
  '''
The main Fusion language. This is the default language for Fusion scripts
and the recommended language for most modules.

# Warning!

<!-- Note similar content in the site index! -->

This documentation is your contract.  Use of non-public and/or
undocumented features, APIs, procedures, modules, _etc._ is NOT SUPPORTED.
Behavior that is not documented here is non-contractual and is subject to
change at any time.  If you have any questions about supported behavior,
contact us for clarification.
  '''

  (require "/fusion/private/builtins")  // For `set`


  // Top-Level Forms
  (provide begin define)

  // Module Forms
  (provide all_defined_out module only_in
    prefix_in provide rename_in rename_out require)

  // Misc core forms
  (provide annotate annotations quasiquote quote
    set type_annotations unquote '#%top')


  //=========================================================================
  // Scalar Types

  (provide is_null is_null_null)

  // bool
  (require "/fusion/bool")
  (provide is_bool is_false is_true is_truthy is_untruthy not)

  (require "/fusion/number")
  (provide + - * / decimal int_to_string is_decimal is_float is_int string_to_int)

  (require "/fusion/string")
  (provide
    is_string
    string_append
    string_contains
    string_ends_with
    string_is_lower
    string_is_upper
    string_join
    string_split
    string_starts_with
    string_to_lower
    string_to_symbol
    string_to_upper
    symbol_to_string
  )

  (require "/fusion/timestamp")
  (provide
    adjust_day
    adjust_hour
    adjust_minute
    adjust_month
    adjust_second
    adjust_year
    epoch_millis_to_timestamp
    is_timestamp
    string_to_timestamp
    timestamp
    timestamp_at_day
    timestamp_at_minute
    timestamp_at_month
    timestamp_at_second
    timestamp_at_year
    timestamp_day
    timestamp_hour
    timestamp_minute
    timestamp_month
    timestamp_second
    timestamp_year
    timestamp_now
    timestamp_offset
    timestamp_put_offset
    timestamp_to_epoch_millis
    timestamp_to_string
    timestamp_with_offset
  )

  (require "/fusion/void")
  (provide is_void void)

  (provide is_symbol is_clob is_blob)

  (provide < <= = >= >)
  (provide = == === same ident)


  //=========================================================================
  // Collection Types

  (require "/fusion/collection")
  (provide . any do element elt every find has_key is_collection is_empty
    none same_size size)

  (require "/fusion/sequence")
  (provide add append choose first fold_left is_sequence last map subseq)

  (require "/fusion/list")
  (provide is_list list list_element list_iterator list_from_iterator)

  (require "/fusion/sexp")
  (provide head is_pair is_sexp pair sexp sexp_iterator tail)

  (require "/fusion/struct")
  (provide is_struct put remove_keys retain_keys struct struct_do
    struct_for_each struct_iterator struct_merge struct_unzip struct_zip)


  //=========================================================================
  // Binding Forms

  (provide let let_values letrec lets values)


  //=========================================================================
  // Control Forms

  (provide and cond exit if or unless when)

  (require "/fusion/iterator")
  (provide empty_iterator is_iterator iterator_append iterator_choose
    iterator_find iterator_has_next iterator_map iterator_map_splicing
    iterator_next make_iterator value_iterator)

  (require "/fusion/for")
  (provide for_list fors_list)


  //=========================================================================
  // Procedures

  (require "/fusion/procedure")
  (provide always apply compose conjoin curry_left curry_right disjoin
    identity is_procedure lambda negate thunk | ||)


  //=========================================================================
  // I/O

  (require "/fusion/io")
  (provide display displayln eof
    ionize ionize_to_blob ionize_to_string
    is_eof read
    with_ion_from_file with_ion_from_lob with_ion_from_string
    write writeln)

)
