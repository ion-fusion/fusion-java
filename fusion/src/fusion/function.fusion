// Copyright (c) 2012-2013 Amazon.com, Inc.  All rights reserved.

(module function '/fusion/base'

  // WARNING: Doc syntax isn't supported yet.
  '''
DEPRECATED: Use /fusion/procedure instead.
  '''

  (require
    "/fusion/experimental/defines"
    "/fusion/procedure")

  (provide always compose identity negate thunk)


  //==========================================================================

  (defpub predicate_and
   (lambda (p1 p2)
     '''
DEPRECATED: Use `conjoin` instead.

Returns a single-argument predicate that is the composition of the
single-argument predicates `p1` and `p2` as with `and`, applying them left to
right until one returns an untruthy value.

In other words, the result is similar to using `and` to compose calls to the
predicates.
      '''
      (conjoin p1 p2)))

  //==========================================================================

  (defpub predicate_or
   (lambda (p1 p2)
      '''
DEPRECATED: Use `disjoin` instead.

Returns a single-argument predicate that is the composition of the
single-argument predicates `p1` and `p2` as with `or`, applying them left to
right until one returns a truthy value.

In other words, the result is similar to using `or` to compose calls to the
predicates.
      '''
      (disjoin p1 p2)))

) // end module
