// Copyright (c) 2012-2014 Amazon.com, Inc.  All rights reserved.

(module builtins '/fusion/private/kernel'

  (require
    "/fusion/experimental/defines"
    "/fusion/private/metasyntax"
  )


  // Pass-through bindings from kernel
  (provide all_defined_out begin define if lambda let_values letrec load module
    not provide quote require)
  (provide is_list is_null is_sexp is_string is_struct)


  (define_syntax unquote
    '''
    (unquote expr)

Used as an escape within a `quasiquote` form; not valid in any other context.
    '''
    (lambda (stx)
      (wrong_syntax stx "must be used inside quasiquote.  Sorry, but it "
        "currently doesn't work inside a struct; see FUSION-34.")))

  (define_syntax quasiquote
    '''
    (quasiquote template)

Like `quote`, but the `template` datum may contain nested `unquote`
forms that act as escapes.  The `unquote`d expression is evaluated when the
containing `quasiquote` is evaluated, and its result is inserted into the
containing quoted datum.

    (quasiquote [(+ 1 2), (unquote (+ 1 2))])

    ==> [(+ 1 2), 3]

`unquote` forms only escape one "level" of quasiquotation:

    (let [(v 1)]
      (quasiquote (a (quasiquote (b (unquote v) (unquote (unquote v)))))))

    ==> (a (quasiquote (b (unquote v) (unquote 1))))
    '''
    (java_new "com.amazon.fusion.QuasiQuoteForm"
              (quote_syntax quasiquote)
              (quote_syntax unquote)))

  (provide quasiquote unquote)



  (defpub_j_syntax set            "com.amazon.fusion.SetForm")
  (defpub_j_syntax '#%top'        "com.amazon.fusion.TopForm")


  (defpub_j apply                 "com.amazon.fusion.ApplyProc")
  (defpub_j exit                  "com.amazon.fusion.ExitProc")
  (defpub_j is_blob               "com.amazon.fusion.FusionBlob$IsBlobProc")
  (defpub_j is_bool               "com.amazon.fusion.FusionBool$IsBoolProc")
  (defpub_j is_clob               "com.amazon.fusion.FusionClob$IsClobProc")
  (defpub_j is_null_null          "com.amazon.fusion.FusionNull$IsNullNullProc")
  (defpub_j is_symbol             "com.amazon.fusion.FusionSymbol$IsSymbolProc")
  (defpub_j values                "com.amazon.fusion.ValuesProc")


  (defpub is_procedure
    '''
    (is_procedure value)

Returns `true` when `value` is a procedure, `false` otherwise.
    '''
    (java_new "com.amazon.fusion.FusionProcedure$IsProcedureProc"))


  (defpub_j size "com.amazon.fusion.FusionCollection$SizeProc")

  (defpub_j is_immutable_list
    "com.amazon.fusion.FusionList$IsImmutableListProc")
  (defpub_j is_mutable_list
    "com.amazon.fusion.FusionList$IsMutableListProc")
  (defpub_j is_stretchy_list
    "com.amazon.fusion.FusionList$IsStretchyListProc")

  (defpub_j list
    "com.amazon.fusion.FusionList$ImmutableListProc")
  (defpub_j mutable_list
    "com.amazon.fusion.FusionList$MutableListProc")
  (defpub_j stretchy_list
    "com.amazon.fusion.FusionList$StretchyListProc")
)
