// Copyright (c) 2015-2017 Amazon.com, Inc.  All rights reserved.

(module kernel2 "/fusion/private/kernel"

  (define_syntax if
    '''
    (if test then else)

Evaluates the `test` expression first.  If the result is truthy, evaluates the
`then` expression and returns its value.  Otherwise, evaluates the `else`
expression and returns its value.

All values are \"truthy\" except for `false`, void, and any variant of `null`.

Note that only one of `then` or `else` expressions is evaluated, and both are
in tail position.
    '''
    (java_new "com.amazon.fusion.IfForm"))


  (define is_list
    '''
    (is_list value)

Determines whether `value` is a list, returning `true` or `false`.
    '''
    (java_new "com.amazon.fusion.FusionList$IsListProc"))


  (define is_null
     '''
     (is_null value)

Returns `true` when `value` is _any_ Ion null, `false` otherwise.
     '''
     (java_new "com.amazon.fusion.IsNullProc"))


  (define is_sexp
    '''
    (is_sexp value)

Determines whether a `value` is a sexp, returning `true` or `false`.
    '''
    (java_new "com.amazon.fusion.FusionSexp$IsSexpProc"))


  (define is_string
    '''
    (is_string value)

Determines whether a `value` is of type `string`, returning `true` or `false`.
    '''
    (java_new "com.amazon.fusion.FusionString$IsStringProc"))


  (define is_struct
    '''
    (is_struct value)

Determines whether `value` is a struct, returning `true` or `false`.
    '''
    (java_new "com.amazon.fusion.FusionStruct$IsStructProc"))


  (define let_values
    (java_new "com.amazon.fusion.LetValuesForm"))

  (define letrec
    (java_new "com.amazon.fusion.LetrecForm"))


  (define not
    '''
    (not value)

Returns `true` if `value` is untruthy, `false` if `value` is truthy. Truthiness
is as defined by [`if`](fusion/bool.html#if).
    '''
    (java_new "com.amazon.fusion.NotProc"))


  (define quote
    (java_new "com.amazon.fusion.QuoteForm"))

  (define quote_syntax
    (java_new "com.amazon.fusion.QuoteSyntaxForm"))

  (provide (all_defined_out))
)
