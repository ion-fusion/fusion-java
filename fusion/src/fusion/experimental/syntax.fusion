// Copyright (c) 2012-2014 Amazon.com, Inc.  All rights reserved.

/*                       *** WARNING ***
 *
 * There may be customer dependencies on this module!  See FUSION-184
 */


(module syntax '/fusion/private/kernel'

  '''
Experimental operators for macros and syntax manipulation.

<!-- FUSION-185 This comment forces FusionDoc to stop the one-liner here. -->

## WARNING

This module contains unstable, experimental features.
There is **NO SUPPORT** for this module.
  '''


  // This is split into two files because the compiler requires that built-in
  // syntactic forms must be imported from another module.
  // That's true everywhere except for these low-level modules.

  (require "/fusion/private/metasyntax")

  (provide datum_to_syntax define_syntax expand_once free_identifier_equal
    is_identifier is_syntax
    quasisyntax quote_syntax
    syntax_append syntax_cons_q syntax_get syntax_size
    syntax_subseq syntax_to_datum syntax_unwrap unsyntax wrong_syntax)


  (define datum_to_syntax (java_new "com.amazon.fusion.DatumToSyntaxProc"))
  (define expand_once     (java_new "com.amazon.fusion.FusionEval$ExpandOnceProc"))
  (define is_identifier   (java_new "com.amazon.fusion.FusionSyntax$IsIdentifierProc"))
  (define is_syntax       (java_new "com.amazon.fusion.FusionSyntax$IsSyntaxProc"))
  (define syntax_append   (java_new "com.amazon.fusion.SyntaxAppendProc"))
  (define syntax_column   (java_new "com.amazon.fusion.SyntaxColumnProc"))
  (define syntax_get      (java_new "com.amazon.fusion.SyntaxGetProc"))
  (define syntax_line     (java_new "com.amazon.fusion.SyntaxLineProc"))
  (define syntax_size     (java_new "com.amazon.fusion.SyntaxSizeProc"))
  (define syntax_source   (java_new "com.amazon.fusion.SyntaxSourceProc"))
  (define syntax_subseq   (java_new "com.amazon.fusion.SyntaxSubseqProc"))
  (define syntax_to_datum (java_new "com.amazon.fusion.FusionSyntax$ToDatumProc"))
  (define syntax_unwrap   (java_new "com.amazon.fusion.FusionSyntax$UnwrapProc"))

  (define free_identifier_equal (java_new "com.amazon.fusion.FreeIdentifierEqualProc"))

  // '_q' suffix intended to denote that the car is quoted by the syntax form.
  // Otherwise this would be a procedure.
  (define_syntax syntax_cons_q
    (lambda (stx)
      (quasisyntax
        (syntax_append (quote_syntax ((unsyntax (syntax_get stx 1))))
                       (unsyntax (syntax_get stx 2))))))
)
