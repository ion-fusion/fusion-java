// Copyright (c) 2013-2024 Amazon.com, Inc.  All rights reserved.

/*                       *** WARNING ***
 *
 * There are customer dependencies on this module!  See FUSION-174
 */


(module decimal "/fusion/base"

  '''
Experimental operators for decimal arithmetic.

<!-- FUSION-185 This comment forces FusionDoc to stop the one-liner here. -->

## WARNING

This module contains unstable, experimental features.
There is **NO SUPPORT** for this module.
  '''


  (require
    "/fusion/experimental/defines"
    "/fusion/ffi/java")


/* These procedures should use a "math context" parameter (or equivalent)
 * holding precision and rounding mode.
 * The best default context is not clear to me.
 * Racket and Dylan don't have decimal arithmetic so there's no help there.
 * Should check the 754 recommendation, Ruby, Python, etc.
 */

  (defpub decimal_scale
    '''
    (decimal_scale d)

Returns the number of fractional digits of the decimal `d`; that is, the
negation of the value's exponent.
    '''
    (java_new "com.amazon.fusion.FusionNumber$DecimalScaleProc"))


  (defpub decimal_divide
    '''
    (decimal_divide dividend divisor)

Like `/`, but rounds to 34 significant digits, using the "half-even" method.

This is equivalent to the "decimal128" default context of IEEE 754.

In the future this procedure will be replaced with a programmatic math context.
    '''
    (java_new "com.amazon.fusion.FusionNumber$DecimalDivideProc"))


  (defpub decimal_rescale
    '''
    (decimal_rescale d scale)

Returns a decimal whose value is `d` but rounded to (or extended to) `scale`
fractional digits.  If the scale is reduced (that is, fractional digits are
removed), the value is rounded using the "half-even" method.

`d` must be a decimal, and `scale` must be an int.
    '''
    (java_new "com.amazon.fusion.FusionNumber$DecimalRescaleProc"))


  (defpub decimal_divide_rescale
    '''
    (decimal_divide_rescale dividend divisor scale)

Like `/`, but rounds to `scale` fractional digits, using the "half-even"
method.  `dividend` and `divisor` must be decimals, and `scale` must be an int.

This function is similar to:

    (decimal_rescale (decimal_divide dividend divisor) scale)

except only a single rounding operation occurs.
    '''
    (java_new "com.amazon.fusion.FusionNumber$DecimalDivideRescaleProc"))


  (defpub_j decimal_to_string
    '''
Converts a decimal to a string using Ion notation.
Returns `null.string` when given `null.decimal`.
    '''
    "com.amazon.fusion.FusionNumber$DecimalToStringProc")


  (defpub_j string_to_decimal
    '''
Returns the decimal equivalent of a properly formatted string value. Returns
`null.decimal` when given `null.string`.

The string can contain an optional minus sign (`\"-\"` aka `\"\\x2D\"`) and must
be followed by one or more ASCII digits. An exception is raised if the string is
a format which cannot be interpreted as a decimal value.

Note: This implementation is experimental! It relies on Java's `BigDecimal`
API to perform string -> decimal parsing. This means it will _not_ handle
[Ion's `decimal` exponent notation](https://amazon-ion.github.io/ion-docs/docs/spec.html#real-numbers).
It also _will_ (incorrectly) accept the
[Java `BigDecimal` exponent notation](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)).
    '''
    "com.amazon.fusion.FusionNumber$StringToDecimalProc")
)
