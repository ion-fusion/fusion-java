// Copyright (c) 2012-2013 Amazon.com, Inc.  All rights reserved.

(module write '/fusion/base'

  '''
Writing data to an output stream.

There are three "styles" of output:

  * `ionize` is for strict generation of Ion data.  If ionization encounters a
  value that is not within the Ion type system, an exception is thrown.
  * `write` is lax generation of Ion text.  It works like `ionize` except that
  it outputs non-Ion values in a manner that is generally unreadable by an Ion
  parser.
  * `display` is for human-readable content.  It works like `write` except for
  character data types (strings and symbols), which are output as-is without
  escapes.

See [`/fusion/read`](fusion/read.html) for related input procedures.
  '''

  (require "/fusion/experimental/defines")


  (defpub_j display "com.amazon.fusion.FusionWrite$DisplayProc")
  (defpub_j ionize  "com.amazon.fusion.FusionWrite$IonizeProc")
  (defpub_j write   "com.amazon.fusion.FusionWrite$WriteProc")

  (defpub displayln
    '''
    (displayln value ...)

Displays the values, then a newline.
    '''
    (lambda rest
      (apply display rest)
      (display "\n")))


  (provide writeln)  // defpub doesn't work for this form
  (define (writeln value)
    '''
    (writeln value)

Writes the value, then a newline.
    '''
    (write value)
    (display "\n"))

)
