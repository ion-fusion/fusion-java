// Copyright (c) 2012-2013 Amazon.com, Inc.  All rights reserved.

(module sexp '/fusion/base'

  '''
Operations for sexps (_a.k.a._ S-expressions) and pairs.

An _sexp_ is a [sequence](fusion/sequence.html) of values with zero-based
integer keys and O(_n_) lookup of elements.  Generally, sexps are linked lists
of _pairs_, each of which has a _head_ slot and a _tail_ slot.  In addition to
pairs, there are zero-length sexps --- for example, the result of `(quote ())`
--- and of course `null.sexp`.

A _proper sexp_ is one in which the tail of the final pair is a zero-length
sexp (_not_ `null.sexp`).

At present, pairs and sexps are immutable.  Issue FUSION-102 covers mutable
sexps.
  '''

  (require
    "/fusion/experimental/defines"
    "/fusion/ffi/java"
    "/fusion/iterator"
    "/fusion/sequence"
    "/fusion/unsafe/sexp")

  // Pass-through bindings from /fusion/private/kernel
  (provide is_sexp)

  // Pass-through bindings from /fusion/sequence
  (provide add any do find first is_empty last size)


  // TODO FUSION-102 mutable_sexp

  (defpub_j sexp    "com.amazon.fusion.FusionSexp$SexpProc")
  (defpub_j pair    "com.amazon.fusion.FusionSexp$PairProc")
  (defpub_j is_pair "com.amazon.fusion.FusionSexp$IsPairProc")


  (defpub head
    (lambda (sexp)
      '''
Returns the first element of `sexp`.  If `sexp` is a pair, the result is its
head slot.  If `sexp` isn't a pair (that is, it's zero-length or `null.sexp`),
the result is void.
      '''
      (unless (is_sexp sexp)
        (raise_argument_error "head" "sexp" 0 sexp))
      (if (is_empty sexp)
        (void)
        (unsafe_pair_head sexp))))

  (defpub tail
    (lambda (sexp)
      '''
Returns the elements _after_ the first element of `sexp`.  If `sexp` is a
pair, the result is its tail slot.  If `sexp` isn't a pair (that is, it's
zero-length or `null.sexp`), the result is void.
      '''
      (unless (is_sexp sexp)
        (raise_argument_error "tail" "sexp" 0 sexp))
      (if (is_empty sexp)
        (void)
        (unsafe_pair_tail sexp))))

)
