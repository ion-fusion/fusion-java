// Copyright (c) 2013-2014 Amazon.com, Inc.  All rights reserved.

// A module can `define` a name that's bound by the module's language.
// Unlike binding introduced via `require`, language bindings can be
// shadowed by module-level `define`s.

(require "/fusion/experimental/check")


// Make sure `apply` has a language binding, otherwise we're not checking what
// we want to test.
(check === 3 (apply + 1 [2]))


(module local "/fusion"
  (define apply 99)
  (define result (+ apply 1))
  (provide result))

(require local)
(check === 100 result)

// Make sure `apply` still has the language binding.
(check === 3 (apply + 1 [2]))


// Module-level `require` can also shadow a language binding.

(module local2 "/fusion"
  (define apply 990)
  (provide apply))

(module local3 "/fusion"
  (require local2)
  (define result (+ apply 1))
  (provide result))

(require local3)
(check === 991 result)

// Make sure `apply` still has the language binding.
(check === 3 (apply + 1 [2]))
