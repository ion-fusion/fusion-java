// Copyright (c) 2013 Amazon.com, Inc.  All rights reserved.

(require
  "/check"
  "/fusion/eval")


//============================================================================
// Check use at module context

(check_compile_exn // TODO check that it raises exn:fail?
  (provide eval))   // ERROR: not at module level


// TODO FUSION-166 Using check_compile_exn should work, but crashes
(check_syntax_exn
  (eval (quote
    (module M "/fusion"
       (if true
         (provide if)  // ERROR: not at module level
         true)))))


//============================================================================
// Should be able to provide something twice

(module Twice "/fusion"
  (define twice 2)
  (provide twice)
  (provide twice))

(require Twice)
(check = twice 2)


//============================================================================
// Check simple all_defined_out

(module M1 "/fusion"
  (define m1 1)
  (define m2 2)
  (provide (all_defined_out)))

(require M1)
(check = m1 1)
(check = m2 2)


//============================================================================
// Check that all_defined_out filters identifiers based on lexical context.

(define top "at-top")

(module M2 "/fusion"
  (require "/fusion/experimental/syntax")
  (define_syntax deftop
    (lambda (stx)
      (quasisyntax
        (define top (unsyntax (syntax_get stx 1))))))
  (define_syntax defpubtop
    (lambda (stx)
      (quasisyntax
        (begin (define top (unsyntax (syntax_get stx 1)))
               (provide (all_defined_out))))))
  (provide (all_defined_out)))

(require M2)
(deftop "macro")         // Defines a different top, with marks from the macro
(check = top "at-top")

(module M3 "/fusion"
  (require M2)
  (deftop "inside M3")
  // This should not export top since it was introduced via macro
  (provide (all_defined_out)))

(require M3)
(check = top "at-top")


(module M4 "/fusion"
  (require M2)
  // This DOES export top
  (defpubtop "inside M4"))
(require M4)
(check = top "inside M4")


// Check failure exporting two bindings w/same name
// TODO should use check_compile_exn but that gets AssertionError
(check_exn // exn:fail?
  (lambda ()
    (eval (quote
      (module M5 "/fusion"
        (require M2)
        (define top "M5")
        (provide top)
        (defpubtop "macro M5"))))))
