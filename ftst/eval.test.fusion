// Copyright Ion Fusion contributors. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

(require
  "/fusion/eval"
  "/fusion/experimental/check"
  "/fusion/experimental/syntax"
  "/fusion/namespace"
  "/fusion/parameter")


(define ns (make_namespace_with_language "/grain")) // In test repo

(check === "soup"
  (eval (quote_syntax barley) ns))

(check === "soup"
  (parameterize ((current_namespace ns))
    (eval (quote_syntax barley))))

(check ===  "soup"
  (eval (quote barley) ns))

(check === [] (eval [] ns))


(define ns (make_namespace_with_language "/fusion"))

(eval (quote (define something 1150)) ns)
(check === 1150
  (eval (quote something) ns))

(check === [1150, 1150]
  (eval (quote [something, something]) ns))

(check === 2
  (eval (quote (. {f:2} "f")) ns))

(expect_argument_exn
  (eval (void)))

(eval (quote (define top 17220)) ns)

(define top 17110)

(check == (eval (quote_syntax (+ top 2)) ns) 17222)
(check == (eval (sexp (quote +) (quote_syntax top) 2) ns) 17222)



//==========================================================================
// expand

(check === true
  (syntax_to_datum (expand (quote_syntax (and)))))

(check === true
  (syntax_to_datum (expand (quote (and)))))

(check === (quote ((lambda (a) a) 3))
  (syntax_to_datum (expand (quote (let [(a 3)] a)))))

(check === (quote ((lambda (a) a) ('#%top' b)))
  (syntax_to_datum (expand (quote (let [(a b)] a)))))
