// Copyright (c) 2012-2014 Amazon.com, Inc.  All rights reserved.

(require
  "/check"
  "/fusion/eval"
  "/fusion/experimental/equality"
  "/fusion/experimental/syntax"
  "/fusion/namespace"
  "/fusion/parameter")


(define ns (make_namespace_with_language "/grain")) // In test repo

(check === (eval (quote_syntax barley) ns)
  "soup")

(check ===
  (parameterize ((current_namespace ns))
    (eval (quote_syntax barley)))
  "soup")


(check === (eval (quote barley) ns)
  "soup")

(check === (eval [] ns)
  [])


(define ns (make_namespace_with_language "/fusion"))

(eval (quote (define something 1150)) ns)
(check === (eval (quote something) ns) 1150)

(check === (eval (quote [something, something]) ns)
  [1150, 1150])

(check === (eval (quote (. {f:2} "f")) ns) 2)


(check_contract_exn
  (eval (void)))


//==========================================================================
// expand

(check ===
  (syntax_to_datum (expand (quote_syntax (and))))
  (quote true))

(check ===
  (syntax_to_datum (expand (quote (and))))
  (quote true))

(check ===
  (syntax_to_datum (expand (quote (let [(a 3)] a))))
  (quote ((lambda (a) a) 3)))

(check ===
  (syntax_to_datum (expand (quote (let [(a b)] a))))
  (quote ((lambda (a) a) ('#%top' b))))

