// Copyright (c) 2012-2014 Amazon.com, Inc.  All rights reserved.

(require
  "/check"
  "/fusion/experimental/equality"
  "/fusion/number")


// Here's the bindings we expect to be available:
(module check_bindings '/fusion/number'
  [ '*', '+', '-', '/',
    '<', '<=', '=', '>=', '>',
    is_decimal, is_float, is_int,
    ceiling, floor,
    int_to_string, string_to_int,
  ])


//============================================================================
// division

// TODO check precision rules
(check == (/ 4.0 2.0) 2.0)

// divide by zero
(check_contract_exn (/ 12. 0.))

// inexact result
(check_contract_exn (/ 12. 7.))


//============================================================================
// comparisons

(check_true (< 1   2  ))
(check_true (< 1   2.0))
(check_true (< 1.0 2  ))
(check_true (< 1.0 2.0))

(check_false (< 2   1  ))
(check_false (< 2   1.0))
(check_false (< 2.0 1  ))
(check_false (< 2.0 1.0))

(check_false (< 1   1  ))
(check_false (< 1   1.0))
(check_false (< 1.0 1  ))
(check_false (< 1.0 1.0))


//============================================================================
// ceiling

(check === (ceiling -1.1) -1)
(check === (ceiling -1)   -1)
(check === (ceiling -0.1)  0)
(check === (ceiling  0)    0)
(check === (ceiling  0.)   0)
(check === (ceiling  0.1)  1)
(check === (ceiling  0.9)  1)
(check === (ceiling  1.0)  1)
(check === (ceiling  1.9)  2)


(check_arity_exn (ceiling))
(check_arity_exn (ceiling 0 1))

(check_arg_exn (ceiling null.int))
(check_arg_exn (ceiling null.decimal))
(check_arg_exn (ceiling 1e0))
(check_arg_exn (ceiling "1"))


//============================================================================
// floor

(check === (floor -1.1) -2)
(check === (floor -1)   -1)
(check === (floor -0.1) -1)
(check === (floor  0)    0)
(check === (floor  0.)   0)
(check === (floor  0.1)  0)
(check === (floor  0.9)  0)
(check === (floor  1.0)  1)
(check === (floor  1.9)  1)

(check_arity_exn (floor))
(check_arity_exn (floor 0 1))

(check_arg_exn (floor null.int))
(check_arg_exn (floor null.decimal))
(check_arg_exn (floor 1e0))
(check_arg_exn (floor "1"))


//============================================================================
// int_to_string

(check === (int_to_string null.int) null.string)

(check === (int_to_string 0) "0")
(check === (int_to_string 1234) "1234")
(check === (int_to_string -99) "-99")

(check === (int_to_string -123456789012345678901234567890)
                         "-123456789012345678901234567890")

(check_arg_exn (int_to_string 1.))
(check_arg_exn (int_to_string "1"))


//============================================================================
// string_to_int

(check === (string_to_int null.string) null.int)

(check === (string_to_int "0") 0)
(check === (string_to_int "1234") 1234)
(check === (string_to_int "-99") -99)

(check === (string_to_int "-123456789012345678901234567890")
                           -123456789012345678901234567890)

(check_arg_exn (string_to_int ""))
(check_arg_exn (string_to_int " 0"))
(check_arg_exn (string_to_int "0 "))
(check_arg_exn (string_to_int " 0 "))
(check_arg_exn (string_to_int "0-"))
(check_arg_exn (string_to_int "0,"))
(check_arg_exn (string_to_int "+1"))
(check_arg_exn (string_to_int "--1"))

(check_arg_exn (string_to_int "1."))
(check_arg_exn (string_to_int "1.0"))
