// Copyright Ion Fusion contributors. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

(require
  "/fusion/collection"
  "/fusion/experimental/check"
  "/testutils"
)


//==========================================================================
// is_collection

(check_true (is_collection null.list))
(check_true (is_collection []))
(check_true (is_collection [1]))
(check_true (is_collection NULL_SEXP))
(check_true (is_collection EMPTY_SEXP))
(check_true (is_collection (sexp 1)))
(check_true (is_collection {}))
(check_false (is_collection null.null))
(check_false (is_collection 1))
(check_false (is_collection "asdf"))
(check_false (is_collection (quote 'asdf')))
(check_false (is_collection 1d-1))
(check_false (is_collection 1e-1))
(check_false (is_collection 1970-01-01))


//==========================================================================
// same_size

(check_true  (same_size [] []))
(check_true  (same_size [4] [7]))
(check_true  (same_size [4, 5, 6] [7, 8, 9]))
(check_false (same_size [] [7]))
(check_false (same_size [4,5,6] [7]))
(check_true  (same_size (sexp) (sexp)))
(check_true  (same_size (sexp 4) (sexp 7)))
(check_true  (same_size (sexp 4 5 6) (sexp 7 8 9)))
(check_false (same_size (sexp) (sexp 7)))
(check_false (same_size (sexp 4 5 6) (sexp 7)))
(check_true  (same_size {} {}))
(check_true  (same_size {x: 4} {f: 7}))
(check_true  (same_size {x: 4, y: 5, z: 6} {f: 7, g: 8, h: 9}))
(check_false (same_size {} {f: 7}))
(check_false (same_size {x: 4, y: 5, z: 6} {f: 7}))
(check_true  (same_size [] {}))
(check_true  (same_size {} (sexp)))
(check_true  (same_size (sexp) []))
(check_true  (same_size [4] {f: 7}))
(check_true  (same_size {x: 4} (sexp 7)))
(check_true  (same_size (sexp 4) [7]))


//==========================================================================
// Check non-collection arguments

(expect_argument_exn (any   T  "non-collection"))
(expect_argument_exn (do    T  "non-collection"))
(expect_argument_exn (every T  "non-collection"))
(expect_argument_exn (find  T  "non-collection"))
(expect_argument_exn (has_key  "non-collection" "key"))
(expect_argument_exn (is_empty "non-collection"))
(expect_argument_exn (none  T  "non-collection"))
