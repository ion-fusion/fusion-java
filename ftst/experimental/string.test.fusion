// Copyright (c) 2014-2016 Amazon.com, Inc.  All rights reserved.

(require
  "/fusion/experimental/check"
  "/fusion/experimental/string"
  "/fusion/string")


//============================================================================
// string_size_utf8

(check === 0  (string_size_utf8 null.string))
(check === 0  (string_size_utf8 ""))
(check === 1  (string_size_utf8 "a"))
(check === 5  (string_size_utf8 "hello"))
(check === 7  (string_size_utf8 "hello\x80"))
(check === 9  (string_size_utf8 "hello\x80\u07ff"))
(check === 12 (string_size_utf8 "hello\x80\u07ff\uffff"))
(check === 16 (string_size_utf8 "hello\x80\u07ff\uffff\U000ffff1"))


//============================================================================
// string_explode, string_implode

(define_check (check_explode str scalars)
  (check === scalars (string_explode str))
  (check === str     (string_implode scalars))
  (check === str     (string_implode (string_explode str)))
  (check === scalars (string_explode (string_implode scalars))))

(check_explode ""                     [])
(check_explode "\0"                   [0])
(check_explode "a B"                  [97, 32, 66])
(check_explode "\u1234"               [0x1234])
(check_explode "\U00100000\U0010FFFF" [0x100000, 0x10FFFF])

// Start with ASCII then switch to supplementary plane.
(check_explode "abc\U00100000"        [97, 98, 99, 0x100000])

